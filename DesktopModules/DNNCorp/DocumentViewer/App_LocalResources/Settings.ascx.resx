<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveRowBackground.Text" xml:space="preserve">
    <value>Active row background</value>
  </data>
  <data name="ActiveRowText.Text" xml:space="preserve">
    <value>Active row text</value>
  </data>
  <data name="AddTag.Text" xml:space="preserve">
    <value>Add Tag</value>
  </data>
  <data name="All.Text" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Ascending.Text" xml:space="preserve">
    <value>Ascending</value>
  </data>
  <data name="AtLeastOneColumnsRequired.ErrorMessage" xml:space="preserve">
    <value>At least one column must be selected</value>
  </data>
  <data name="AvailableColumns.Text" xml:space="preserve">
    <value>Available Columns</value>
  </data>
  <data name="Background.Text" xml:space="preserve">
    <value>Background</value>
  </data>
  <data name="Breadcrumbs.Text" xml:space="preserve">
    <value>Breadcrumbs</value>
  </data>
  <data name="Button.Text" xml:space="preserve">
    <value>Button</value>
  </data>
  <data name="ButtonLabel.Text" xml:space="preserve">
    <value>Button label</value>
  </data>
  <data name="ColumnName.Text" xml:space="preserve">
    <value>Column Name</value>
  </data>
  <data name="Columns.Help" xml:space="preserve">
    <value>Select the metadata columns that will be displayed in the grid</value>
  </data>
  <data name="Columns.Text" xml:space="preserve">
    <value>Columns</value>
  </data>
  <data name="ColumnsInfo.Text" xml:space="preserve">
    <value>Select columns to add to view and drag to create</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Document Viewer Settings</value>
  </data>
  <data name="CustomizableTemplate.Text" xml:space="preserve">
    <value>Customizable Template</value>
  </data>
  <data name="DefaultSortOrder.Help" xml:space="preserve">
    <value>Select the default order applied in the grid</value>
  </data>
  <data name="DefaultSortOrder.Text" xml:space="preserve">
    <value>Default Sort Order</value>
  </data>
  <data name="DefaultTemplate.Text" xml:space="preserve">
    <value>Default Template</value>
  </data>
  <data name="Descending.Text" xml:space="preserve">
    <value>Descending</value>
  </data>
  <data name="Drawer.Text" xml:space="preserve">
    <value>Drawer</value>
  </data>
  <data name="ExcludeSubfolders.Text" xml:space="preserve">
    <value>Exclude subfolders</value>
  </data>
  <data name="ExcludeSubfoldersLabel.Help" xml:space="preserve">
    <value>If checked, the module will show only files and files under subfolders but it will not show subfolders</value>
  </data>
  <data name="ExcludeSubfoldersLabel.Text" xml:space="preserve">
    <value />
  </data>
  <data name="FilterByFolder.Text" xml:space="preserve">
    <value>Filter By Folder</value>
  </data>
  <data name="FilterByTags.Text" xml:space="preserve">
    <value>Filter By Tags</value>
  </data>
  <data name="FilterViewManagementSettings.Text" xml:space="preserve">
    <value>Filter View Management</value>
  </data>
  <data name="FolderMustBeSelected.ErrorMessage" xml:space="preserve">
    <value>A folder must be selected when the "Filter By Folder" option is checked</value>
  </data>
  <data name="Footer.Text" xml:space="preserve">
    <value>Footer</value>
  </data>
  <data name="GridAppearanceSettings.Text" xml:space="preserve">
    <value>Grid Appearance</value>
  </data>
  <data name="Header.Text" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="InactiveButton.Text" xml:space="preserve">
    <value>Inactive button</value>
  </data>
  <data name="IncludeSubfolders_FilesOnly.Text" xml:space="preserve">
    <value>Include Subfolders (Files Only)</value>
  </data>
  <data name="IncludeSubfolders_ShowFolderStructure.Text" xml:space="preserve">
    <value>Include Subfolders (Show folder structure)</value>
  </data>
  <data name="ItemsPerPage.Help" xml:space="preserve">
    <value>Set the number of items or rows per page. 'All' indicates that the grid will show all the content on one page</value>
  </data>
  <data name="ItemsPerPage.Text" xml:space="preserve">
    <value>Items Per Page</value>
  </data>
  <data name="Layout.Help" xml:space="preserve">
    <value>Select between the default Document Viewer layout or the customizable colors layout</value>
  </data>
  <data name="Layout.Text" xml:space="preserve">
    <value>Layout</value>
  </data>
  <data name="Link.Text" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="Main.Text" xml:space="preserve">
    <value>Main</value>
  </data>
  <data name="MainTitleBackground.Text" xml:space="preserve">
    <value>Title background</value>
  </data>
  <data name="MainTitleText.Text" xml:space="preserve">
    <value>Title text</value>
  </data>
  <data name="NoSet.Text" xml:space="preserve">
    <value>No Set</value>
  </data>
  <data name="RowBackground.Text" xml:space="preserve">
    <value>Row background</value>
  </data>
  <data name="RowText.Text" xml:space="preserve">
    <value>Row text</value>
  </data>
  <data name="SelectedColumns.Text" xml:space="preserve">
    <value>Selected Columns</value>
  </data>
  <data name="TagsMustBeAdded.ErrorMessage" xml:space="preserve">
    <value>At least, one tag must be added when the "Filter By Tags" option is checked</value>
  </data>
  <data name="Text.Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="UserHasNoPermissionToUpdateSettings.ErrorMessage" xml:space="preserve">
    <value>User has no permission to update the Module Settings</value>
  </data>
  <data name="ViewColumnsManagementSettings.Text" xml:space="preserve">
    <value>View Columns Management</value>
  </data>
  <data name="ViewCondition.Help" xml:space="preserve">
    <value>Select the filter options to be applied in the grid</value>
  </data>
  <data name="ViewCondition.Text" xml:space="preserve">
    <value>Set View Condition</value>
  </data>
</root>